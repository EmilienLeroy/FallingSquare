
  name: Release
  on:
    push:
      tags:
        - v*
  jobs:
    build-release:
      runs-on: ubuntu-latest
      container:
        image: barichello/godot-ci:3.4.5
      steps:
        - uses: actions/checkout@v2
          with:
            lfs: true
  
        - name: Setup Templates
          run: |
            mkdir -v -p ~/.local/share/godot/templates
            mv /root/.local/share/godot/templates/3.4.5.stable ~/.local/share/godot/templates/3.4.5.stable
            mkdir -v -p ~/.config/godot/
            cp /root/.config/godot/editor_settings-3.tres ~/.config/godot/editor_settings-3.tres
            mkdir -pv android/build
            mkdir -pv android/plugins
            echo "3.4.5.stable" > android/.build_version
            unzip ~/.local/share/godot/templates/3.4.5.stable/android_source.zip -d android/build
            touch android/build/.gdignore
            chmod +x android/build/gradlew

        - name: Prepare Highscore config 
          env:
            HIGHSCORE_URL: ${{secrets.HIGHSCORE_URL}}
          if: env.HIGHSCORE_URL
          run: |
            sed 's@config/highscore=".*"@config/highscore="'$HIGHSCORE_URL'"@g' -i project.godot

        - name: Prepare Android Keystore
          env:
            ANDROID_KEYSTORE: ${{secrets.ANDROID_RELEASE_KEYSTORE}}
            ANDROID_KEYSTORE_USER: ${{secrets.ANDROID_RELEASE_KEYSTORE_USER}}
            ANDROID_KEYSTORE_PW: ${{secrets.ANDROID_RELEASE_KEYSTORE_PW}}
          if: |
            env.ANDROID_KEYSTORE &&
            env.ANDROID_KEYSTORE_USER &&
            env.ANDROID_KEYSTORE_PW
          run: |
            echo $ANDROID_KEYSTORE | base64 --decode > ./production.keystore
            sed 's@keystore/release=".*"@keystore/release="'./production.keystore'"@g' -i export_presets.cfg
            sed 's@keystore/release_user=".*"@keystore/release_user="'$ANDROID_KEYSTORE_USER'"@g' -i export_presets.cfg
            sed 's@keystore/release_password=".*"@keystore/release_password="'$ANDROID_KEYSTORE_PW'"@g' -i export_presets.cfg

        - name: Build Android App Bundle
          run: |
            mkdir -v -p ./dist
            godot --quiet --export "Android" ./dist/FallingSquare.aab

        - name: Upload Android App Bundle
          uses: actions/upload-artifact@v2
          with:
            name: release
            path: |
              dist/FallingSquare.aab
  
    deploy-release:
      needs: build-release
      runs-on: ubuntu-latest
      steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: release
          path: ./dist/

      - name: Prepare Playstore key
        env:
          PLAYSTORE_KEY: ${{secrets.PLAYSTORE_KEY}}
        if: |
          env.PLAYSTORE_KEY
        run: |
          echo $PLAYSTORE_KEY > ./playstore.key.json

      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true 
      - run: bundle exec fastlane android deploy

    release:
      name: Github Release
      runs-on: ubuntu-latest
      needs: [deploy-release]
      steps:
        - uses: actions/checkout@v2
        - uses: actions/setup-node@v2
        - run: npm install -g @geut/chan
        - run: echo "GAME_VERSION=`cat project.godot | grep -oP '(?<=config/version=").*' |  sed 's/.$//'`" >> $GITHUB_ENV
        - run: chan gh-release ${{ env.GAME_VERSION }}
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
